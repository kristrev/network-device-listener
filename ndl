#!/bin/bash

#Remember that facilities beginning with a $ is provided by the system
#local_fs is required because multi writes to /var/ (according to LSB 3.1)
### BEGIN INIT INFO
# Provides: ndl
# Required-Start: $network $local_fs
# Required-Stop: $network $local_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Network Device Listener
# Description: Listenes for network devices added via udev and automatically
# sets them as up.
### END INIT INFO

case "$1" in
    start)
        echo "Starting Network Device Listener as daemon ..." #Expand variable
        if start-stop-daemon --oknodo --exec /usr/local/bin/network_device_listener --start -- -d; then  #Start-deamen is fantastic
            echo "Network Device Listener started sucessfully."
        else
            echo "Network Device Listener failed to start."
        fi
        ;; 
    stop)
        echo "Stopping Network Device Listener ..."
        if start-stop-daemon --oknodo --exec /usr/local/bin/network_device_listener --stop; then
            echo "Network Device Listener was stopped."
        else
            echo "Network Device Listener could not be stopped sucessfully."
        fi
        ;;
    restart|force-reload)
        #Put these as functions
        echo "Stopping Network Device Listener ..."
        if start-stop-daemon --oknodo --exec /usr/local/bin/network_device_listener --stop; then
            echo "Network Device Listener was stopped."
        else
            echo "Network Device Listener could not be stopped sucessfully."
            exit 1
        fi

        echo "Starting Network Device Listener as daemon ..." #Expand variable
        if start-stop-daemon --oknodo --exec /usr/local/bin/network_device_listener --start -- -d; then  #Start-deamen is fantastic
            echo "Network Device Listener started sucessfully."
        else
            echo "Network Device Listener failed to start."
            exit 1
        fi

        ;;
    *)
        echo "Usage /etc/init.d/ndl {start|stop|restart|force-reload}"
        exit 1
        ;;
esac

exit 0

